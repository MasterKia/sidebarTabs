export namespace themeMap {
    namespace customTheme {
        export { CSS_VAR_BG as customBackgroundColor };
        export { CSS_VAR_BG_ACTIVE as customActiveBackgroundColor };
        export { CSS_VAR_BG_DISCARDED as customDiscardedBackgroundColor };
        export { CSS_VAR_BG_FIELD as customFieldBackgroundColor };
        export { CSS_VAR_BG_FIELD_ACTIVE as customFieldBackgroundActiveColor };
        export { CSS_VAR_BG_HOVER as customHoverBackgroundColor };
        export { CSS_VAR_BG_HOVER_SHADOW as customHoverBackgroundShadow };
        export { CSS_VAR_BG_SELECT as customSelectionBackgroundColor };
        export { CSS_VAR_BG_SELECT_HOVER as customHoverSelectionBackgroundColor };
        export { CSS_VAR_BORDER_ACTIVE as customActiveBorderColor };
        export { CSS_VAR_BORDER_FIELD as customFieldBorderColor };
        export { CSS_VAR_BORDER_FIELD_ACTIVE as customActiveFieldBorderColor };
        export { CSS_VAR_COLOR as customColor };
        export { CSS_VAR_COLOR_ACTIVE as customActiveColor };
        export { CSS_VAR_COLOR_DISCARDED as customDiscardedColor };
        export { CSS_VAR_COLOR_FIELD as customFieldColor };
        export { CSS_VAR_COLOR_FIELD_ACTIVE as customActiveFieldColor };
        export { CSS_VAR_COLOR_HOVER as customHoverColor };
        export { CSS_VAR_COLOR_SELECT as customSelectionColor };
        export { CSS_VAR_COLOR_SELECT_HOVER as customHoverSelectionColor };
        export { CSS_VAR_HEADING_TEXT_GROUP_1 as customTabGroup1HeadingText };
        export { CSS_VAR_HEADING_TEXT_GROUP_2 as customTabGroup2HeadingText };
        export { CSS_VAR_HEADING_TEXT_GROUP_3 as customTabGroup3HeadingText };
        export { CSS_VAR_HEADING_TEXT_GROUP_4 as customTabGroup4HeadingText };
        export { CSS_VAR_HEADING_TEXT_PINNED as customPinnedTabGroupHeadingText };
        export { CSS_VAR_OUTLINE_FOCUS as customFocusOutlineColor };
        export { CSS_VAR_THROBBER_CONNECT as customThrobberConnectingColor };
    }
    namespace alpenTheme {
        let customBackgroundColor: string;
        let customActiveBackgroundColor: string;
        let customDiscardedBackgroundColor: string;
        let customFieldBackgroundColor: string;
        let customFieldBackgroundActiveColor: string;
        let customFrameBackgroundColor: string;
        let customHoverBackgroundColor: string;
        let customHoverBackgroundShadow: string;
        let customSelectionBackgroundColor: string;
        let customHoverSelectionBackgroundColor: string;
        let customActiveBorderColor: string;
        let customFieldBorderColor: string;
        let customActiveFieldBorderColor: string;
        let customColor: string;
        let customActiveColor: string;
        let customDiscardedColor: string;
        let customFieldColor: string;
        let customActiveFieldColor: string;
        let customFrameColor: string;
        let customHoverColor: string;
        let customSelectionColor: string;
        let customHoverSelectionColor: string;
        let customTabGroup1HeadingText: string;
        let customTabGroup2HeadingText: string;
        let customTabGroup3HeadingText: string;
        let customTabGroup4HeadingText: string;
        let customPinnedTabGroupHeadingText: string;
        let customFocusOutlineColor: string;
        let customThrobberConnectingColor: string;
    }
    namespace alpenDarkTheme {
        let customBackgroundColor_1: string;
        export { customBackgroundColor_1 as customBackgroundColor };
        let customActiveBackgroundColor_1: string;
        export { customActiveBackgroundColor_1 as customActiveBackgroundColor };
        let customDiscardedBackgroundColor_1: string;
        export { customDiscardedBackgroundColor_1 as customDiscardedBackgroundColor };
        let customFieldBackgroundColor_1: string;
        export { customFieldBackgroundColor_1 as customFieldBackgroundColor };
        let customFieldBackgroundActiveColor_1: string;
        export { customFieldBackgroundActiveColor_1 as customFieldBackgroundActiveColor };
        let customFrameBackgroundColor_1: string;
        export { customFrameBackgroundColor_1 as customFrameBackgroundColor };
        let customHoverBackgroundColor_1: string;
        export { customHoverBackgroundColor_1 as customHoverBackgroundColor };
        let customHoverBackgroundShadow_1: string;
        export { customHoverBackgroundShadow_1 as customHoverBackgroundShadow };
        let customSelectionBackgroundColor_1: string;
        export { customSelectionBackgroundColor_1 as customSelectionBackgroundColor };
        let customHoverSelectionBackgroundColor_1: string;
        export { customHoverSelectionBackgroundColor_1 as customHoverSelectionBackgroundColor };
        let customActiveBorderColor_1: string;
        export { customActiveBorderColor_1 as customActiveBorderColor };
        let customFieldBorderColor_1: string;
        export { customFieldBorderColor_1 as customFieldBorderColor };
        let customActiveFieldBorderColor_1: string;
        export { customActiveFieldBorderColor_1 as customActiveFieldBorderColor };
        let customColor_1: string;
        export { customColor_1 as customColor };
        let customActiveColor_1: string;
        export { customActiveColor_1 as customActiveColor };
        let customDiscardedColor_1: string;
        export { customDiscardedColor_1 as customDiscardedColor };
        let customFieldColor_1: string;
        export { customFieldColor_1 as customFieldColor };
        let customActiveFieldColor_1: string;
        export { customActiveFieldColor_1 as customActiveFieldColor };
        let customFrameColor_1: string;
        export { customFrameColor_1 as customFrameColor };
        let customHoverColor_1: string;
        export { customHoverColor_1 as customHoverColor };
        let customSelectionColor_1: string;
        export { customSelectionColor_1 as customSelectionColor };
        let customHoverSelectionColor_1: string;
        export { customHoverSelectionColor_1 as customHoverSelectionColor };
        let customTabGroup1HeadingText_1: string;
        export { customTabGroup1HeadingText_1 as customTabGroup1HeadingText };
        let customTabGroup2HeadingText_1: string;
        export { customTabGroup2HeadingText_1 as customTabGroup2HeadingText };
        let customTabGroup3HeadingText_1: string;
        export { customTabGroup3HeadingText_1 as customTabGroup3HeadingText };
        let customTabGroup4HeadingText_1: string;
        export { customTabGroup4HeadingText_1 as customTabGroup4HeadingText };
        let customPinnedTabGroupHeadingText_1: string;
        export { customPinnedTabGroupHeadingText_1 as customPinnedTabGroupHeadingText };
        let customFocusOutlineColor_1: string;
        export { customFocusOutlineColor_1 as customFocusOutlineColor };
        let customThrobberConnectingColor_1: string;
        export { customThrobberConnectingColor_1 as customThrobberConnectingColor };
    }
    namespace darkTheme {
        let customBackgroundColor_2: string;
        export { customBackgroundColor_2 as customBackgroundColor };
        let customActiveBackgroundColor_2: string;
        export { customActiveBackgroundColor_2 as customActiveBackgroundColor };
        let customDiscardedBackgroundColor_2: string;
        export { customDiscardedBackgroundColor_2 as customDiscardedBackgroundColor };
        let customFieldBackgroundColor_2: string;
        export { customFieldBackgroundColor_2 as customFieldBackgroundColor };
        let customFieldBackgroundActiveColor_2: string;
        export { customFieldBackgroundActiveColor_2 as customFieldBackgroundActiveColor };
        let customFrameBackgroundColor_2: string;
        export { customFrameBackgroundColor_2 as customFrameBackgroundColor };
        let customHoverBackgroundColor_2: string;
        export { customHoverBackgroundColor_2 as customHoverBackgroundColor };
        let customHoverBackgroundShadow_2: string;
        export { customHoverBackgroundShadow_2 as customHoverBackgroundShadow };
        let customSelectionBackgroundColor_2: string;
        export { customSelectionBackgroundColor_2 as customSelectionBackgroundColor };
        let customHoverSelectionBackgroundColor_2: string;
        export { customHoverSelectionBackgroundColor_2 as customHoverSelectionBackgroundColor };
        let customActiveBorderColor_2: string;
        export { customActiveBorderColor_2 as customActiveBorderColor };
        let customFieldBorderColor_2: string;
        export { customFieldBorderColor_2 as customFieldBorderColor };
        let customActiveFieldBorderColor_2: string;
        export { customActiveFieldBorderColor_2 as customActiveFieldBorderColor };
        let customColor_2: string;
        export { customColor_2 as customColor };
        let customActiveColor_2: string;
        export { customActiveColor_2 as customActiveColor };
        let customDiscardedColor_2: string;
        export { customDiscardedColor_2 as customDiscardedColor };
        let customFieldColor_2: string;
        export { customFieldColor_2 as customFieldColor };
        let customActiveFieldColor_2: string;
        export { customActiveFieldColor_2 as customActiveFieldColor };
        let customFrameColor_2: string;
        export { customFrameColor_2 as customFrameColor };
        let customHoverColor_2: string;
        export { customHoverColor_2 as customHoverColor };
        let customSelectionColor_2: string;
        export { customSelectionColor_2 as customSelectionColor };
        let customHoverSelectionColor_2: string;
        export { customHoverSelectionColor_2 as customHoverSelectionColor };
        let customTabGroup1HeadingText_2: string;
        export { customTabGroup1HeadingText_2 as customTabGroup1HeadingText };
        let customTabGroup2HeadingText_2: string;
        export { customTabGroup2HeadingText_2 as customTabGroup2HeadingText };
        let customTabGroup3HeadingText_2: string;
        export { customTabGroup3HeadingText_2 as customTabGroup3HeadingText };
        let customTabGroup4HeadingText_2: string;
        export { customTabGroup4HeadingText_2 as customTabGroup4HeadingText };
        let customPinnedTabGroupHeadingText_2: string;
        export { customPinnedTabGroupHeadingText_2 as customPinnedTabGroupHeadingText };
        let customFocusOutlineColor_2: string;
        export { customFocusOutlineColor_2 as customFocusOutlineColor };
        let customThrobberConnectingColor_2: string;
        export { customThrobberConnectingColor_2 as customThrobberConnectingColor };
    }
    namespace lightTheme {
        let customBackgroundColor_3: string;
        export { customBackgroundColor_3 as customBackgroundColor };
        let customActiveBackgroundColor_3: string;
        export { customActiveBackgroundColor_3 as customActiveBackgroundColor };
        let customDiscardedBackgroundColor_3: string;
        export { customDiscardedBackgroundColor_3 as customDiscardedBackgroundColor };
        let customFieldBackgroundColor_3: string;
        export { customFieldBackgroundColor_3 as customFieldBackgroundColor };
        let customFieldBackgroundActiveColor_3: string;
        export { customFieldBackgroundActiveColor_3 as customFieldBackgroundActiveColor };
        let customFrameBackgroundColor_3: string;
        export { customFrameBackgroundColor_3 as customFrameBackgroundColor };
        let customHoverBackgroundColor_3: string;
        export { customHoverBackgroundColor_3 as customHoverBackgroundColor };
        let customHoverBackgroundShadow_3: string;
        export { customHoverBackgroundShadow_3 as customHoverBackgroundShadow };
        let customSelectionBackgroundColor_3: string;
        export { customSelectionBackgroundColor_3 as customSelectionBackgroundColor };
        let customHoverSelectionBackgroundColor_3: string;
        export { customHoverSelectionBackgroundColor_3 as customHoverSelectionBackgroundColor };
        let customActiveBorderColor_3: string;
        export { customActiveBorderColor_3 as customActiveBorderColor };
        let customFieldBorderColor_3: string;
        export { customFieldBorderColor_3 as customFieldBorderColor };
        let customActiveFieldBorderColor_3: string;
        export { customActiveFieldBorderColor_3 as customActiveFieldBorderColor };
        let customColor_3: string;
        export { customColor_3 as customColor };
        let customActiveColor_3: string;
        export { customActiveColor_3 as customActiveColor };
        let customDiscardedColor_3: string;
        export { customDiscardedColor_3 as customDiscardedColor };
        let customFieldColor_3: string;
        export { customFieldColor_3 as customFieldColor };
        let customActiveFieldColor_3: string;
        export { customActiveFieldColor_3 as customActiveFieldColor };
        let customFrameColor_3: string;
        export { customFrameColor_3 as customFrameColor };
        let customHoverColor_3: string;
        export { customHoverColor_3 as customHoverColor };
        let customSelectionColor_3: string;
        export { customSelectionColor_3 as customSelectionColor };
        let customHoverSelectionColor_3: string;
        export { customHoverSelectionColor_3 as customHoverSelectionColor };
        let customTabGroup1HeadingText_3: string;
        export { customTabGroup1HeadingText_3 as customTabGroup1HeadingText };
        let customTabGroup2HeadingText_3: string;
        export { customTabGroup2HeadingText_3 as customTabGroup2HeadingText };
        let customTabGroup3HeadingText_3: string;
        export { customTabGroup3HeadingText_3 as customTabGroup3HeadingText };
        let customTabGroup4HeadingText_3: string;
        export { customTabGroup4HeadingText_3 as customTabGroup4HeadingText };
        let customPinnedTabGroupHeadingText_3: string;
        export { customPinnedTabGroupHeadingText_3 as customPinnedTabGroupHeadingText };
        let customFocusOutlineColor_3: string;
        export { customFocusOutlineColor_3 as customFocusOutlineColor };
        let customThrobberConnectingColor_3: string;
        export { customThrobberConnectingColor_3 as customThrobberConnectingColor };
    }
}
export const currentThemeColors: Map<any, any>;
export const currentTheme: Map<any, any>;
export function getThemeId(): Promise<string | null>;
export function setCurrentThemeColors(key: string, value: Array<number> | string): Promise<void>;
export function getCurrentThemeBaseValues(opt?: object): Promise<object>;
export function getBaseValues(opt?: object): Promise<object>;
export function setCurrentThemeValue(opt?: object): Promise<void>;
export function sendCurrentTheme(themeId?: string): Promise<Promise<any> | null>;
export function updateCustomThemeCss(sel: string, prop?: string, value?: string): Promise<void>;
export function deleteCustomThemeCss(sel?: string): Promise<void>;
export function initCustomTheme(opt?: object): Promise<Promise<any> | null>;
export function getThemeInfo(opt?: object): Promise<any[]>;
export function setTheme(info?: any[], opt?: object): Promise<void>;
export const timeStamp: Map<any, any>;
export function applyLocalTheme(opt?: object): Promise<Promise<any> | null>;
export function applyCustomTheme(data?: object): Promise<any[]>;
export function applyTheme(opt?: object): Promise<any>;
export function setUserCss(css: string): Promise<void>;
export function getTabHeight(): Promise<boolean>;
export function setTabHeight(compact?: boolean): Promise<void>;
export function getScrollbarWidth(): Promise<boolean>;
export function setScrollbarWidth(narrow?: boolean): Promise<void>;
export function getTabGroupColorBarWidth(): Promise<boolean>;
export function setTabGroupColorBarWidth(narrow?: boolean): Promise<void>;
export function getNewTabSeparator(): Promise<boolean>;
export function setNewTabSeparator(show?: boolean): Promise<void>;
export function setActiveTabFontWeight(value: string): Promise<Promise<any> | null>;
export function applyCss(): Promise<void>;
export function setSidebarTheme(opt?: object): Promise<void>;
import { CSS_VAR_BG } from './constant.js';
import { CSS_VAR_BG_ACTIVE } from './constant.js';
import { CSS_VAR_BG_DISCARDED } from './constant.js';
import { CSS_VAR_BG_FIELD } from './constant.js';
import { CSS_VAR_BG_FIELD_ACTIVE } from './constant.js';
import { CSS_VAR_BG_HOVER } from './constant.js';
import { CSS_VAR_BG_HOVER_SHADOW } from './constant.js';
import { CSS_VAR_BG_SELECT } from './constant.js';
import { CSS_VAR_BG_SELECT_HOVER } from './constant.js';
import { CSS_VAR_BORDER_ACTIVE } from './constant.js';
import { CSS_VAR_BORDER_FIELD } from './constant.js';
import { CSS_VAR_BORDER_FIELD_ACTIVE } from './constant.js';
import { CSS_VAR_COLOR } from './constant.js';
import { CSS_VAR_COLOR_ACTIVE } from './constant.js';
import { CSS_VAR_COLOR_DISCARDED } from './constant.js';
import { CSS_VAR_COLOR_FIELD } from './constant.js';
import { CSS_VAR_COLOR_FIELD_ACTIVE } from './constant.js';
import { CSS_VAR_COLOR_HOVER } from './constant.js';
import { CSS_VAR_COLOR_SELECT } from './constant.js';
import { CSS_VAR_COLOR_SELECT_HOVER } from './constant.js';
import { CSS_VAR_HEADING_TEXT_GROUP_1 } from './constant.js';
import { CSS_VAR_HEADING_TEXT_GROUP_2 } from './constant.js';
import { CSS_VAR_HEADING_TEXT_GROUP_3 } from './constant.js';
import { CSS_VAR_HEADING_TEXT_GROUP_4 } from './constant.js';
import { CSS_VAR_HEADING_TEXT_PINNED } from './constant.js';
import { CSS_VAR_OUTLINE_FOCUS } from './constant.js';
import { CSS_VAR_THROBBER_CONNECT } from './constant.js';
