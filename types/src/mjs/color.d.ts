export namespace colorname {
    const aliceblue: string;
    const antiquewhite: string;
    const aqua: string;
    const aquamarine: string;
    const azure: string;
    const beige: string;
    const bisque: string;
    const black: string;
    const blanchedalmond: string;
    const blue: string;
    const blueviolet: string;
    const brown: string;
    const burlywood: string;
    const cadetblue: string;
    const chartreuse: string;
    const chocolate: string;
    const coral: string;
    const cornflowerblue: string;
    const cornsilk: string;
    const crimson: string;
    const cyan: string;
    const darkblue: string;
    const darkcyan: string;
    const darkgoldenrod: string;
    const darkgray: string;
    const darkgreen: string;
    const darkgrey: string;
    const darkkhaki: string;
    const darkmagenta: string;
    const darkolivegreen: string;
    const darkorange: string;
    const darkorchid: string;
    const darkred: string;
    const darksalmon: string;
    const darkseagreen: string;
    const darkslateblue: string;
    const darkslategray: string;
    const darkslategrey: string;
    const darkturquoise: string;
    const darkviolet: string;
    const deeppink: string;
    const deepskyblue: string;
    const dimgray: string;
    const dimgrey: string;
    const dodgerblue: string;
    const firebrick: string;
    const floralwhite: string;
    const forestgreen: string;
    const fuchsia: string;
    const gainsboro: string;
    const ghostwhite: string;
    const gold: string;
    const goldenrod: string;
    const gray: string;
    const green: string;
    const greenyellow: string;
    const grey: string;
    const honeydew: string;
    const hotpink: string;
    const indianred: string;
    const indigo: string;
    const ivory: string;
    const khaki: string;
    const lavender: string;
    const lavenderblush: string;
    const lawngreen: string;
    const lemonchiffon: string;
    const lightblue: string;
    const lightcoral: string;
    const lightcyan: string;
    const lightgoldenrodyellow: string;
    const lightgray: string;
    const lightgreen: string;
    const lightgrey: string;
    const lightpink: string;
    const lightsalmon: string;
    const lightseagreen: string;
    const lightskyblue: string;
    const lightslategray: string;
    const lightslategrey: string;
    const lightsteelblue: string;
    const lightyellow: string;
    const lime: string;
    const limegreen: string;
    const linen: string;
    const magenta: string;
    const maroon: string;
    const mediumaquamarine: string;
    const mediumblue: string;
    const mediumorchid: string;
    const mediumpurple: string;
    const mediumseagreen: string;
    const mediumslateblue: string;
    const mediumspringgreen: string;
    const mediumturquoise: string;
    const mediumvioletred: string;
    const midnightblue: string;
    const mintcream: string;
    const mistyrose: string;
    const moccasin: string;
    const navajowhite: string;
    const navy: string;
    const oldlace: string;
    const olive: string;
    const olivedrab: string;
    const orange: string;
    const orangered: string;
    const orchid: string;
    const palegoldenrod: string;
    const palegreen: string;
    const paleturquoise: string;
    const palevioletred: string;
    const papayawhip: string;
    const peachpuff: string;
    const peru: string;
    const pink: string;
    const plum: string;
    const powderblue: string;
    const purple: string;
    const rebeccapurple: string;
    const red: string;
    const rosybrown: string;
    const royalblue: string;
    const saddlebrown: string;
    const salmon: string;
    const sandybrown: string;
    const seagreen: string;
    const seashell: string;
    const sienna: string;
    const silver: string;
    const skyblue: string;
    const slateblue: string;
    const slategray: string;
    const slategrey: string;
    const snow: string;
    const springgreen: string;
    const steelblue: string;
    const tan: string;
    const teal: string;
    const thistle: string;
    const tomato: string;
    const turquoise: string;
    const violet: string;
    const wheat: string;
    const white: string;
    const whitesmoke: string;
    const yellow: string;
    const yellowgreen: string;
}
export function validateColorComponents(arr: any[], opt?: {
    alpha?: boolean;
    minLength?: number;
    maxLength?: number;
    minRange?: number;
    maxRange?: number;
    validateRange?: boolean;
}): Promise<any[]>;
export function transformMatrix(mtx: Array<Array<number>>, vct: Array<number>): Promise<Array<number>>;
export function numberToHexString(value: number): Promise<string>;
export function angleToDeg(angle: string): Promise<number>;
export function rgbToLinearRgb(rgb: Array<number>): Promise<Array<number>>;
export function linearRgbToRgb(rgb: Array<number>): Promise<Array<number>>;
export function rgbToXyz(rgb: Array<number>): Promise<Array<number>>;
export function xyzToRgb(xyz: Array<number>): Promise<Array<number>>;
export function xyzToHsl(xyz: Array<number>): Promise<Array<number>>;
export function xyzToHwb(xyz: Array<number>): Promise<Array<number>>;
export function xyzD50ToLab(xyz: Array<number>): Promise<Array<number>>;
export function xyzD50ToLch(xyz: Array<number>): Promise<Array<number>>;
export function xyzToOklab(xyz: Array<number>): Promise<Array<number>>;
export function xyzToOklch(xyz: Array<number>): Promise<Array<number>>;
export function hexToRgb(value: string): Promise<Array<number>>;
export function hexToLinearRgb(value: string): Promise<Array<number>>;
export function hexToXyz(value: string): Promise<Array<number>>;
export function hexToXyzD50(value: string): Promise<Array<number>>;
export function reInsertMissingComponents(value: string, color?: any[]): Promise<any[]>;
export function normalizeColorComponents(colorA: any[], colorB: any[]): Promise<Array<any[]>>;
export function parseAlpha(a?: string | null): Promise<number>;
export function parseRgb(value: string): Promise<Array<number>>;
export function parseHsl(value: string): Promise<Array<number>>;
export function parseHwb(value: string): Promise<Array<number>>;
export function parseLab(value: string): Promise<Array<number>>;
export function parseLch(value: string): Promise<Array<number>>;
export function parseOklab(value: string): Promise<Array<number>>;
export function parseOklch(value: string): Promise<Array<number>>;
export function parseColorFunc(value: string, d50?: boolean): Promise<Array<number>>;
export function parseColor(value: string, d50?: boolean): Promise<Array<number>>;
export function convertColorToLinearRgb(value: string, opt?: object): Promise<any[]>;
export function convertColorToRgb(value: string, opt?: object): Promise<any[]>;
export function convertRgbToHex(rgb: Array<number>): Promise<string>;
export function convertLinearRgbToHex(rgb: any[]): Promise<string>;
export function convertXyzToHex(xyz: any[]): Promise<string>;
export function convertXyzD50ToHex(xyz: any[]): Promise<string>;
export function convertColorToHex(value: string, opt?: {
    alpha?: boolean;
}): Promise<string | null>;
export function convertColorFuncToHex(value: string, opt?: {
    alpha?: boolean;
}): Promise<string | null>;
export function convertColorMixToHex(value: string, opt?: {
    alpha?: boolean;
}): Promise<string | null>;
export function getColorInHex(value: string, opt?: object): Promise<(string | any[]) | null>;
export function compositeLayeredColors(overlay: string, base: string): Promise<string | null>;
